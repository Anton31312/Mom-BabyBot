#!/usr/bin/env python
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ SQLAlchemy —Å Django.

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ SQLAlchemy
–¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.
"""

import os
import sys
import django
from pathlib import Path

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
project_dir = Path(__file__).resolve().parent
sys.path.insert(0, str(project_dir))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mom_baby_bot.settings')
django.setup()

from django.conf import settings
from mom_baby_bot.sqlalchemy_utils import get_sqlalchemy_session, check_database_connection
from botapp.models import User

def test_database_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    print("Testing database connection...")
    result = check_database_connection()
    print(f"Database connection: {'‚úÖ PASSED' if result else '‚ùå FAILED'}")
    return result

def test_sqlalchemy_session():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏ SQLAlchemy –∏ –±–∞–∑–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π."""
    print("Testing SQLAlchemy session...")
    try:
        with get_sqlalchemy_session() as session:
            # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
            user_count = session.query(User).count()
            print(f"Current user count: {user_count}")
            
            # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ –∫–æ–º–º–∏—Ç–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
            test_user = User(
                telegram_id=999999999,
                username="test_user",
                first_name="Test",
                last_name="User"
            )
            session.add(test_user)
            session.flush()  # Flush, –Ω–æ –Ω–µ –∫–æ–º–º–∏—Ç–∏–º
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–µ—Å—Å–∏—é
            found_user = session.query(User).filter_by(telegram_id=999999999).first()
            if found_user:
                print("‚úÖ User creation and query test PASSED")
                # –û—Ç–∫–∞—Ç –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                session.rollback()
                return True
            else:
                print("‚ùå User creation test FAILED")
                return False
                
    except Exception as e:
        print(f"‚ùå SQLAlchemy session test FAILED: {e}")
        return False

def test_sqlalchemy_engine():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–≤–∏–∂–∫–∞ SQLAlchemy."""
    print("Testing SQLAlchemy engine configuration...")
    try:
        engine = settings.SQLALCHEMY_ENGINE
        print(f"Database URL: {engine.url}")
        print(f"Pool size: {engine.pool.size()}")
        print("‚úÖ SQLAlchemy engine configuration PASSED")
        return True
    except Exception as e:
        print(f"‚ùå SQLAlchemy engine test FAILED: {e}")
        return False

def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤."""
    print("=" * 50)
    print("SQLAlchemy Integration Test")
    print("=" * 50)
    
    tests = [
        test_database_connection,
        test_sqlalchemy_engine,
        test_sqlalchemy_session,
    ]
    
    results = []
    for test in tests:
        try:
            result = test()
            results.append(result)
        except Exception as e:
            print(f"‚ùå Test {test.__name__} FAILED with exception: {e}")
            results.append(False)
        print("-" * 30)
    
    # –°–≤–æ–¥–∫–∞
    passed = sum(results)
    total = len(results)
    
    print("=" * 50)
    print(f"Test Results: {passed}/{total} tests passed")
    
    if passed == total:
        print("üéâ All tests PASSED! SQLAlchemy integration is working correctly.")
        return 0
    else:
        print("‚ö†Ô∏è  Some tests FAILED. Please check the configuration.")
        return 1

if __name__ == "__main__":
    sys.exit(main())