name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–∞–º–∏

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    
    steps:
    - name: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage pytest pytest-django coverage-badge
    
    - name: –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
      run: |
        echo "SECRET_KEY=test-secret-key-for-coverage" >> $GITHUB_ENV
        echo "DEBUG=False" >> $GITHUB_ENV
        echo "DATABASE_URL=sqlite:///coverage_test.sqlite3" >> $GITHUB_ENV
        echo "TELEGRAM_BOT_TOKEN=test-token" >> $GITHUB_ENV
        echo "ADMIN_IDS=123456789" >> $GITHUB_ENV
    
    - name: –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
      run: |
        coverage run --source='.' manage.py test --settings=mom_baby_bot.settings
        coverage report --show-missing
        coverage xml
        coverage html
    
    - name: –°–æ–∑–¥–∞–Ω–∏–µ –±–µ–π–¥–∂–∞ –ø–æ–∫—Ä—ã—Ç–∏—è
      run: |
        coverage-badge -o coverage.svg
    
    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è
      run: |
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ (–º–∏–Ω–∏–º—É–º 70%)
        coverage report --fail-under=70
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ–∫—Ä—ã—Ç–∏—è
        COVERAGE=$(coverage report --format=total)
        echo "COVERAGE_PERCENT=$COVERAGE" >> $GITHUB_ENV
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –±–µ–π–¥–∂–∞
        if [ $COVERAGE -ge 90 ]; then
          echo "COVERAGE_COLOR=brightgreen" >> $GITHUB_ENV
        elif [ $COVERAGE -ge 80 ]; then
          echo "COVERAGE_COLOR=green" >> $GITHUB_ENV
        elif [ $COVERAGE -ge 70 ]; then
          echo "COVERAGE_COLOR=yellow" >> $GITHUB_ENV
        else
          echo "COVERAGE_COLOR=red" >> $GITHUB_ENV
        fi
    
    - name: –ê–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è –ø–æ –º–æ–¥—É–ª—è–º
      run: |
        echo "## üìä –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è –ø–æ –º–æ–¥—É–ª—è–º" > coverage_report.md
        echo "" >> coverage_report.md
        
        # –ê–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è –¥–ª—è webapp
        echo "### üåê –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (webapp)" >> coverage_report.md
        coverage report --include="webapp/*" --format=markdown >> coverage_report.md || echo "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ –¥–ª—è webapp" >> coverage_report.md
        echo "" >> coverage_report.md
        
        # –ê–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è –¥–ª—è botapp
        echo "### ü§ñ Telegram –±–æ—Ç (botapp)" >> coverage_report.md
        coverage report --include="botapp/*" --format=markdown >> coverage_report.md || echo "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ –¥–ª—è botapp" >> coverage_report.md
        echo "" >> coverage_report.md
        
        # –ê–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
        echo "### ‚öôÔ∏è –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏" >> coverage_report.md
        coverage report --include="mom_baby_bot/*" --format=markdown >> coverage_report.md || echo "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π" >> coverage_report.md
        
        cat coverage_report.md
    
    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è PR)
      if: github.event_name == 'pull_request'
      uses: tj-actions/changed-files@v39
      id: changed-files
      with:
        files: |
          **/*.py
        files_ignore: |
          **/migrations/**
          **/tests/**
          test_*.py
          *_test.py
    
    - name: –ê–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
      if: github.event_name == 'pull_request' && steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "## üîç –ü–æ–∫—Ä—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤" > changed_files_coverage.md
        echo "" >> changed_files_coverage.md
        
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          if [[ "$file" == *.py ]] && [[ "$file" != */migrations/* ]] && [[ "$file" != */tests/* ]]; then
            echo "### üìÑ $file" >> changed_files_coverage.md
            coverage report --include="$file" >> changed_files_coverage.md || echo "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–∫—Ä—ã—Ç–∏–∏" >> changed_files_coverage.md
            echo "" >> changed_files_coverage.md
          fi
        done
        
        cat changed_files_coverage.md
    
    - name: –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á–µ—Ç–æ–≤ –æ –ø–æ–∫—Ä—ã—Ç–∏–∏
      uses: actions/upload-artifact@v3
      with:
        name: coverage-reports
        path: |
          htmlcov/
          coverage.xml
          coverage.svg
          coverage_report.md
        retention-days: 30
    
    - name: –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ PR —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∫—Ä—ã—Ç–∏—è
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          let comment = `## üìä –û—Ç—á–µ—Ç –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ —Ç–µ—Å—Ç–∞–º–∏\n\n`;
          comment += `**–û–±—â–µ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:** ${process.env.COVERAGE_PERCENT}%\n\n`;
          
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–∫—Ä—ã—Ç–∏—è
          const coverage = parseInt(process.env.COVERAGE_PERCENT);
          let status = '';
          let emoji = '';
          
          if (coverage >= 90) {
            status = '–û—Ç–ª–∏—á–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ! üéâ';
            emoji = 'üü¢';
          } else if (coverage >= 80) {
            status = '–•–æ—Ä–æ—à–µ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ ‚úÖ';
            emoji = 'üü¢';
          } else if (coverage >= 70) {
            status = '–ü—Ä–∏–µ–º–ª–µ–º–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ ‚ö†Ô∏è';
            emoji = 'üü°';
          } else {
            status = '–ù–∏–∑–∫–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ ‚ùå';
            emoji = 'üî¥';
          }
          
          comment += `**–°—Ç–∞—Ç—É—Å:** ${emoji} ${status}\n\n`;
          
          // –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
          comment += `### üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø–æ–∫—Ä—ã—Ç–∏—é:\n`;
          comment += `- ‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –æ–±—â–µ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ: 70%\n`;
          comment += `- ‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ: 80%+\n`;
          comment += `- ‚úÖ –û—Ç–ª–∏—á–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ: 90%+\n\n`;
          
          // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã
          comment += `### üìÅ –û—Ç—á–µ—Ç—ã:\n`;
          comment += `- üìä [HTML –æ—Ç—á–µ—Ç](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})\n`;
          comment += `- üìÑ [XML –æ—Ç—á–µ—Ç](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})\n\n`;
          
          // –ß–∏—Ç–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
          try {
            const detailedReport = fs.readFileSync('coverage_report.md', 'utf8');
            comment += detailedReport;
          } catch (error) {
            comment += `*–î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω*\n`;
          }
          
          // –ß–∏—Ç–∞–µ–º –æ—Ç—á–µ—Ç –ø–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–º —Ñ–∞–π–ª–∞–º –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
          try {
            const changedFilesReport = fs.readFileSync('changed_files_coverage.md', 'utf8');
            comment += `\n${changedFilesReport}`;
          } catch (error) {
            // –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
          }
          
          comment += `\n---\n*–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–æ GitHub Actions*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    
    - name: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ README —Å –±–µ–π–¥–∂–µ–º –ø–æ–∫—Ä—ã—Ç–∏—è
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –±–µ–π–¥–∂ –ø–æ–∫—Ä—ã—Ç–∏—è –≤ README
        if grep -q "coverage-" README.md; then
          sed -i "s/coverage-[0-9]*%-[a-z]*/coverage-${COVERAGE_PERCENT}%-${COVERAGE_COLOR}/g" README.md
        else
          echo "–î–æ–±–∞–≤—å—Ç–µ –±–µ–π–¥–∂ –ø–æ–∫—Ä—ã—Ç–∏—è –≤ README.md:"
          echo "![Coverage](https://img.shields.io/badge/coverage-${COVERAGE_PERCENT}%-${COVERAGE_COLOR})"
        fi
    
    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è
      if: env.COVERAGE_PERCENT < 50
      run: |
        echo "üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò –ù–ò–ó–ö–û–ï –ü–û–ö–†–´–¢–ò–ï –¢–ï–°–¢–ê–ú–ò!"
        echo "–¢–µ–∫—É—â–µ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ: $COVERAGE_PERCENT%"
        echo "–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ: 70%"
        echo ""
        echo "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø–æ–∫—Ä—ã—Ç–∏—è."
        exit 1