name: –ü—Ä–æ–≤–µ—Ä–∫–∏ Pull Request

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  pr-validation:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
    - name: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    
    - name: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage pytest pytest-django flake8 black isort mypy bandit safety
    
    - name: –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
      id: changed-files
      uses: tj-actions/changed-files@v39
      with:
        files: |
          **/*.py
        files_ignore: |
          **/migrations/**
          **/tests/**
    
    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
        echo "–ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã: ${{ steps.changed-files.outputs.all_changed_files }}"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å flake8
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞: $file"
          flake8 "$file" || exit 1
        done
    
    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "üé® –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞: $file"
          black --check --diff "$file" || exit 1
        done
    
    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–º–ø–æ—Ä—Ç–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–º–ø–æ—Ä—Ç–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ —Ñ–∞–π–ª–∞: $file"
          isort --check-only --diff "$file" || exit 1
        done
    
    - name: –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤
      run: |
        echo "SECRET_KEY=test-secret-key-for-pr" >> $GITHUB_ENV
        echo "DEBUG=False" >> $GITHUB_ENV
        echo "DATABASE_URL=sqlite:///test_pr.sqlite3" >> $GITHUB_ENV
        echo "TELEGRAM_BOT_TOKEN=test-token" >> $GITHUB_ENV
        echo "ADMIN_IDS=123456789" >> $GITHUB_ENV
    
    - name: –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
      run: |
        echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –∏–∑–º–µ—Ä–µ–Ω–∏–µ–º –ø–æ–∫—Ä—ã—Ç–∏—è..."
        coverage run --source='.' manage.py test --settings=mom_baby_bot.settings
        coverage report --show-missing --fail-under=70
        coverage xml
    
    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–∞–º–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "üìä –ê–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
        coverage report --show-missing
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∫—Ä—ã—Ç–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          if [[ "$file" == *.py ]] && [[ "$file" != */migrations/* ]] && [[ "$file" != */tests/* ]]; then
            echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è –¥–ª—è —Ñ–∞–π–ª–∞: $file"
            coverage report --include="$file" --fail-under=60 || echo "‚ö†Ô∏è –ù–∏–∑–∫–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –¥–ª—è —Ñ–∞–π–ª–∞ $file"
          fi
        done
    
    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          if [[ "$file" == *.py ]]; then
            echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ñ–∞–π–ª–∞: $file"
            bandit "$file" || echo "‚ö†Ô∏è –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ —Ñ–∞–π–ª–µ $file"
          fi
        done
    
    - name: –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ PR —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø—Ä–æ–≤–µ—Ä–æ–∫
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          let comment = '## üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ Pull Request\n\n';
          
          // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö
          const changedFiles = '${{ steps.changed-files.outputs.all_changed_files }}';
          if (changedFiles) {
            comment += '### üìÅ –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:\n';
            changedFiles.split(' ').forEach(file => {
              comment += `- \`${file}\`\n`;
            });
            comment += '\n';
          }
          
          comment += '### ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:\n';
          comment += '- üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ (Black)\n';
          comment += '- üì¶ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ (isort)\n';
          comment += '- üìè –°—Ç–∏–ª—å –∫–æ–¥–∞ (flake8)\n';
          comment += '- üß™ –ú–æ–¥—É–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã\n';
          comment += '- üìä –ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏ (–º–∏–Ω–∏–º—É–º 70%)\n';
          comment += '- üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (bandit)\n\n';
          
          comment += '### üìã –ß–µ–∫-–ª–∏—Å—Ç –¥–ª—è —Ä–µ–≤—å—é–µ—Ä–∞:\n';
          comment += '- [ ] –ö–æ–¥ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –ø—Ä–æ–µ–∫—Ç–∞\n';
          comment += '- [ ] –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç\n';
          comment += '- [ ] –ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ\n';
          comment += '- [ ] –ù–µ—Ç –ø—Ä–æ–±–ª–µ–º —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é\n';
          comment += '- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ (–µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ)\n';
          comment += '- [ ] –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤—Ä—É—á–Ω—É—é\n\n';
          
          comment += '---\n';
          comment += '*–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–æ GitHub Actions*';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  size-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ PR
      uses: actions/github-script@v6
      with:
        script: |
          const { data: pr } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          
          const additions = pr.additions;
          const deletions = pr.deletions;
          const changedFiles = pr.changed_files;
          
          let size = 'small';
          let emoji = 'üü¢';
          let message = '–†–∞–∑–º–µ—Ä PR –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –¥–ª—è —Ä–µ–≤—å—é';
          
          if (additions + deletions > 1000 || changedFiles > 20) {
            size = 'large';
            emoji = 'üî¥';
            message = 'PR —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ–Ω—å—à–∏—Ö PR';
          } else if (additions + deletions > 500 || changedFiles > 10) {
            size = 'medium';
            emoji = 'üü°';
            message = 'PR —Å—Ä–µ–¥–Ω–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏—á–µ—Å–∫–∏ —Å–≤—è–∑–∞–Ω—ã';
          }
          
          const comment = `## ${emoji} –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–º–µ—Ä–∞ PR
          
          **–†–∞–∑–º–µ—Ä:** ${size}
          **–î–æ–±–∞–≤–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫:** ${additions}
          **–£–¥–∞–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫:** ${deletions}
          **–ò–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:** ${changedFiles}
          
          ${message}
          
          ### üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
          - –ù–µ–±–æ–ª—å—à–∏–µ PR (< 200 —Å—Ç—Ä–æ–∫) –ª–µ–≥—á–µ —Ä–µ–≤—å—é–∏—Ç—å –∏ –∏–º–µ—é—Ç –º–µ–Ω—å—à–µ –±–∞–≥–æ–≤
          - –ë–æ–ª—å—à–∏–µ PR —Å–ª–µ–¥—É–µ—Ç —Ä–∞–∑–±–∏–≤–∞—Ç—å –Ω–∞ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ —á–∞—Å—Ç–∏
          - –ö–∞–∂–¥—ã–π PR –¥–æ–ª–∂–µ–Ω —Ä–µ—à–∞—Ç—å –æ–¥–Ω—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∑–∞–¥–∞—á—É
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  conflict-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å–ª–∏—è–Ω–∏—è
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å–ª–∏—è–Ω–∏—è..."
        
        # –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—É—é –≤–µ—Ç–∫—É
        git fetch origin ${{ github.event.pull_request.base.ref }}
        
        # –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–±–Ω–æ–µ —Å–ª–∏—è–Ω–∏–µ
        if git merge-tree $(git merge-base HEAD origin/${{ github.event.pull_request.base.ref }}) HEAD origin/${{ github.event.pull_request.base.ref }} | grep -q "<<<<<<< "; then
          echo "‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Å–ª–∏—è–Ω–∏—è!"
          echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–∞–∑—Ä–µ—à–∏—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –ø–µ—Ä–µ–¥ —Å–ª–∏—è–Ω–∏–µ–º PR"
          exit 1
        else
          echo "‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Å–ª–∏—è–Ω–∏—è –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
        fi