#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Å SQLite
set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ Mom&Baby Bot —Å SQLite..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
    if [ -f env.sqlite.example ]; then
        cp env.sqlite.example .env
        echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –∏–∑ env.sqlite.example"
        echo "‚ö†Ô∏è –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ .env —Ñ–∞–π–ª–µ!"
    else
        echo "‚ùå –§–∞–π–ª env.sqlite.example –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏..."
if python check_amvera_ready.py; then
    echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –Ω–µ –ø—Ä–æ—à–ª–∞"
    exit 1
fi

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SQLite –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
if python init_sqlite_amvera.py; then
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    exit 1
fi

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üìä –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
if python manage.py migrate --noinput; then
    echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π"
    exit 1
fi

# –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
echo "üìÅ –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."
if python manage.py collectstatic --noinput --clear; then
    echo "‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã —Å–æ–±—Ä–∞–Ω—ã"
else
    echo "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–±–æ—Ä–æ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤"
fi

echo "üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Ä–µ–∂–∏–º–µ –∑–∞–ø—É—Å–∫–∞
echo ""
echo "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞:"
echo "1) Development (Django runserver)"
echo "2) Production (Docker Compose)"
echo "3) Development Docker"
echo "4) –¢–æ–ª—å–∫–æ –±–æ—Ç"
read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): " choice

case $choice in
    1)
        echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
        python manage.py runserver 0.0.0.0:8000
        ;;
    2)
        echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ..."
        docker-compose up -d
        echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"
        echo "üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose logs -f"
        echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
        ;;
    3)
        echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ development Docker —Ä–µ–∂–∏–º–µ..."
        docker-compose -f docker-compose.dev.yml up
        ;;
    4)
        echo "ü§ñ –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –±–æ—Ç–∞..."
        python manage.py run_bot
        ;;
    *)
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
        exit 1
        ;;
esac 