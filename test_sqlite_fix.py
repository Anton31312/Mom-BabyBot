#!/usr/bin/env python
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è SQLite
"""
import os
import sys
import django

def test_directory_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
    print("üß™ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...")
    
    db_path = '/app/data/mom_baby_bot.db'
    db_dir = os.path.dirname(db_path)
    
    try:
        # –£–¥–∞–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if os.path.exists(db_dir):
            import shutil
            shutil.rmtree(db_dir)
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        os.makedirs(db_dir, exist_ok=True)
        
        if os.path.exists(db_dir):
            print(f"‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞: {db_dir}")
            return True
        else:
            print(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —Å–æ–∑–¥–∞–Ω–∞: {db_dir}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {e}")
        return False

def test_sqlite_file_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ SQLite"""
    print("\nüß™ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ SQLite...")
    
    db_path = '/app/data/mom_baby_bot.db'
    
    try:
        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if os.path.exists(db_path):
            os.remove(db_path)
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª SQLite
        import sqlite3
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        cursor.execute('CREATE TABLE test (id INTEGER PRIMARY KEY)')
        conn.commit()
        conn.close()
        
        if os.path.exists(db_path):
            print(f"‚úÖ –§–∞–π–ª SQLite —Å–æ–∑–¥–∞–Ω: {db_path}")
            return True
        else:
            print(f"‚ùå –§–∞–π–ª SQLite –Ω–µ —Å–æ–∑–¥–∞–Ω: {db_path}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ SQLite: {e}")
        return False

def test_django_with_sqlite():
    """–¢–µ—Å—Ç Django —Å SQLite"""
    print("\nüß™ –¢–µ—Å—Ç Django —Å SQLite...")
    
    try:
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mom_baby_bot.settings_prod')
        django.setup()
        
        from django.db import connection
        with connection.cursor() as cursor:
            cursor.execute("SELECT 1")
            result = cursor.fetchone()
            
        print(f"‚úÖ Django SQLite —Ä–∞–±–æ—Ç–∞–µ—Ç: {result}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Django SQLite: {e}")
        return False

def test_sqlalchemy_utils():
    """–¢–µ—Å—Ç SQLAlchemy utils"""
    print("\nüß™ –¢–µ—Å—Ç SQLAlchemy utils...")
    
    try:
        from mom_baby_bot.sqlalchemy_utils import check_database_connection, create_tables
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        if check_database_connection():
            print("‚úÖ SQLAlchemy –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
            create_tables()
            print("‚úÖ SQLAlchemy —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
            return True
        else:
            print("‚ùå SQLAlchemy –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ SQLAlchemy utils: {e}")
        return False

def main():
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è SQLite\n")
    
    tests = [
        ("Directory Creation", test_directory_creation),
        ("SQLite File Creation", test_sqlite_file_creation),
        ("Django with SQLite", test_django_with_sqlite),
        ("SQLAlchemy Utils", test_sqlalchemy_utils),
    ]
    
    results = []
    for test_name, test_func in tests:
        try:
            result = test_func()
            results.append(result)
        except Exception as e:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ {test_name}: {e}")
            results.append(False)
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {sum(results)}/{len(results)} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏")
    
    if all(results):
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏! SQLite –∏—Å–ø—Ä–∞–≤–ª–µ–Ω.")
        return 0
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏.")
        return 1

if __name__ == "__main__":
    sys.exit(main())