# Generated by Django 4.2.7 on 2025-07-31 07:21

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('webapp', '0003_add_disclaimer_acknowledgment'),
    ]

    operations = [
        migrations.CreateModel(
            name='PersonalizedContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('content_type', models.CharField(choices=[('tip', 'Совет'), ('fact', 'Факт'), ('recommendation', 'Рекомендация'), ('warning', 'Предупреждение'), ('milestone', 'Веха развития'), ('activity', 'Активность')], default='tip', max_length=20, verbose_name='Тип контента')),
                ('pregnancy_status_filter', models.JSONField(blank=True, default=list, help_text='Список статусов беременности, для которых подходит контент', verbose_name='Фильтр по статусу беременности')),
                ('pregnancy_week_min', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(42)], verbose_name='Минимальная неделя беременности')),
                ('pregnancy_week_max', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(42)], verbose_name='Максимальная неделя беременности')),
                ('experience_level_filter', models.JSONField(blank=True, default=list, help_text='Список уровней опыта, для которых подходит контент', verbose_name='Фильтр по уровню опыта')),
                ('interest_tags', models.JSONField(blank=True, default=list, help_text='Список тегов интересов для фильтрации контента', verbose_name='Теги интересов')),
                ('priority', models.CharField(choices=[('low', 'Низкий'), ('medium', 'Средний'), ('high', 'Высокий'), ('urgent', 'Срочный')], default='medium', max_length=10, verbose_name='Приоритет')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('show_once', models.BooleanField(default=False, help_text='Если отмечено, контент будет показан пользователю только один раз', verbose_name='Показать только один раз')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
            ],
            options={
                'verbose_name': 'Персонализированный контент',
                'verbose_name_plural': 'Персонализированный контент',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pregnancy_status', models.CharField(choices=[('not_pregnant', 'Не беременна'), ('pregnant', 'Беременна'), ('postpartum', 'После родов')], default='not_pregnant', max_length=20, verbose_name='Статус беременности')),
                ('pregnancy_week', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(42)], verbose_name='Неделя беременности')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Предполагаемая дата родов')),
                ('experience_level', models.CharField(choices=[('first_time', 'Первый ребенок'), ('experienced', 'Есть опыт'), ('multiple_children', 'Несколько детей')], default='first_time', max_length=20, verbose_name='Уровень опыта')),
                ('interests', models.JSONField(blank=True, default=list, help_text='Список интересов пользователя для персонализации контента', verbose_name='Интересы')),
                ('show_daily_tips', models.BooleanField(default=True, verbose_name='Показывать ежедневные советы')),
                ('preferred_content_frequency', models.CharField(choices=[('daily', 'Ежедневно'), ('weekly', 'Еженедельно'), ('monthly', 'Ежемесячно')], default='daily', max_length=10, verbose_name='Частота показа контента')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профили пользователей',
            },
        ),
        migrations.CreateModel(
            name='UserContentView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewed_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата просмотра')),
                ('interaction_type', models.CharField(choices=[('viewed', 'Просмотрен'), ('clicked', 'Нажат'), ('dismissed', 'Отклонен'), ('saved', 'Сохранен')], default='viewed', max_length=20, verbose_name='Тип взаимодействия')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='webapp.personalizedcontent', verbose_name='Контент')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_views', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Просмотр контента',
                'verbose_name_plural': 'Просмотры контента',
                'ordering': ['-viewed_at'],
                'unique_together': {('user', 'content')},
            },
        ),
    ]
